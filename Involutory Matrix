package leeeetcodeee;
import  java.util.*;
public class GFG {
	 static int N = 3;
     
	   
	    static void multiply(int mat[][], int res[][])
	    {
	    	
	        for (int i = 0; i < N; i++) {
	            for (int j = 0; j < N; j++) {
	                res[i][j] = 0;
	                for (int k = 0; k < N; k++)
	                    res[i][j] += mat[i][k] * mat[k][j];
	                System.out.print(res[i][j] + " ");
	            } 
	           
	        }
	    }
	     
  static boolean InvolutoryMatrix(int mat[][])
	    {
	        int res[][] = new int[N][N];
	     

	        multiply(mat, res);
	     
	        for (int i = 0; i < N; i++) {
	            for (int j = 0; j < N; j++) {
	                if (i == j && res[i][j] != 1)
	                    return false;
	                if (i != j && res[i][j] != 0)
	                    return false;
	            }
	        }
	        return true;
	    }
	     
.
	    public static void main (String[] args)
	    {
	         
	        int mat[][] = { { 1, 0, 0 },
	                        { 0, -1, 0 },
	                        { 0, 0, -1 } };
	     
	        // Function call. If function return
	        // true then if part will execute
	        // otherwise else part will execute.
	        if (InvolutoryMatrix(mat))
	            System.out.println ( "Involutory Matrix");
	        else
	            System.out.println ( "Not Involutory Matrix");
	     
	             
	    }
}
